<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
   <!-- 配置表与实体对象的关系 -->
   <!-- package属性:填写一个包名.在元素内部凡是需要书写完整类名的属性,可以直接写简答类名了. -->
<hibernate-mapping package="com.iteason.domain" >
	<!-- 
		class元素: 配置实体与表的对应关系的
			name: 完整类名
			table:数据库表名
	 -->
	 <!-- private Long lkm_id;
	private Character lkm_gender;
	private String lkm_phone;
	private String lkm_mobile;
	private String lkm_email;
	private String lkm_qq;
	private String lkm_position;
	private String lkm_memo;
	
	//表达多对一关系
	private Customer customer;
	 -->
	<class name="LinkMan" table="cst_linkman" >
		<!-- id元素:配置主键映射的属性
				name: 填写主键对应属性名
				column(可选): 填写表中的主键列名.默认值:列名会默认使用属性名
				type(可选):填写列(属性)的类型.hibernate会自动检测实体的属性类型.
						每个类型有三种填法: java类型|hibernate类型|数据库类型
				not-null(可选):配置该属性(列)是否不能为空. 默认值:false
				length(可选):配置数据库中列的长度. 默认值:使用数据库类型的最大长度
		 -->
		<id name="lkm_id"  >
			<!-- generator:主键生成策略
				
				indentity:主键自增，由数据库来维护，无需输入主键值
				increment(了解):主键自增，但每次都会判断主键最大值并加一，存在线程不安全问题=，不适用
				sequence:Oracle中的主键生生策略
				hilo:高低位算法，主键自增，由hibernate来维护，开发不适用
				assigned：自然主键策略
				
				*native:hilo+sequence+identity 的生成策略
				
				*uuid:产生随机字符串作为主键,主键类型必须为String
			
			 -->
			<generator class="native"></generator>
		</id>
		<!-- property元素:除id之外的普通属性映射
				name: 填写属性名
				column(可选): 填写列名
				type(可选):填写列(属性)的类型.hibernate会自动检测实体的属性类型.
						每个类型有三种填法: java类型|hibernate类型|数据库类型
				not-null(可选):配置该属性(列)是否不能为空. 默认值:false
				length(可选):配置数据库中列的长度. 默认值:使用数据库类型的最大长度
		 -->
		<property name="lkm_gender"  >
			<!--  <column name="cust_name" sql-type="varchar" ></column> -->
		</property>
		<property name="lkm_phone"  ></property>
		<property name="lkm_mobile"  ></property>
		<property name="lkm_email"  ></property>
		<property name="lkm_qq"  ></property>
		<property name="lkm_position"  ></property>
		<property name="lkm_memo"  ></property>
		<property name="lkm_name"  ></property>
		
		<!-- 配置多对一 -->
		<many-to-one name="customer" column="lkm_cust_id" class="Customer"></many-to-one> 
		
	</class>
</hibernate-mapping>